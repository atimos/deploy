steps:
    - description: Setup environment
      commands:
          type: wasm
          uri: 'core://env'
          command: set
          args:
              dockerhub: 'https://registry.hub.docker.com'

    - description: Run checks, unit tests and integration tests
      commands:
          - {type: unit, name: docker-install, args: {dev-mode: dev}}
          - mode: parallel
            commands:
                - {type: oci, repository: '{{env.dockerhub}}', image: composer, command: composer, args: 'test:unit'}
                - {type: oci, repository: '{{env.dockerhub}}', image: composer, command: composer, args: 'test:integration'}
                - {type: oci, repository: '{{env.dockerhub}}', image: composer, command: composer, args: 'check:style'}
                - {type: oci, repository: '{{env.dockerhub}}', image: composer, command: composer, args: 'check:mess'}

    - description: Build docker images
      commands:
          - mode: parallel
            commands:
                - {type: wasm, uri: 'core://env', command: set_local, args: {tag: '{{env.docker_repository}}:{{env.service_name}}/{{env.build_number}}'}}
                - {type: unit, name: docker-install, args: {dev-mode: no-dev}}
          - mode: parallel
            commands:
                - {type: unit, name: build-image, args: {image: Dockerfile.fpm, tag: '{{env.tag}}/fpm'}}
                - {type: unit, name: build-image, args: {image: Dockerfile.nginx, tag: '{{env.tag}}/nginx'}}

    - description: Run system and integration tests
      commands:
          - {type: unit, name: docker-install, args: {dev-mode: dev}}
          - {type: oci, repository: "{{env.dockerhub}}", image: composer, command: composer, args: 'test:system'}
          - {type: oci, repository: "{{env.dockerhub}}", image: composer, command: composer, args: 'test:e2e'}

    - description: Collect test results
      commands:
          mode: parallel,
          run-on-status: [abort, error, success],
          commands:
              - {type: wasm, uri: 'core://report', command: publish, args: {input: test/report/php/report.xml, type: junit}}
              - {type: wasm, uri: 'core://report', command: publish, args: {input: test/report/php/clover.xml, type: clover}}

units:
    build-image:
        args:
            - name: image
            - name: tag
        commands: 
            type: oci
            repository: '{{env.dockerhub}}'
            image: docker
            raw-command: true
            command: 'build -f {{args.image}} -t {{args.tag}}; && docker push {{args.tag}}'

    docker-install:
        description: "Install packages: {{args.dev-mode}}"
        args:
            - name: dev-mode
        commands:
            type: oci
            repository: '{{env.dockerhub}}'
            image: composer
            command: composer
            args:
                - install
                - '--{{args.dev-mode}}'
